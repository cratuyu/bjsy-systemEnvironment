#server.port=9002
server.port=7002

# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.url=jdbc:mysql://124.42.41.36:3306/syenvironment?useUnicode=true&amp;characterEncoding=utf-8
#spring.datasource.url=jdbc:mysql://10.10.11.185:3306/syenvironment?useUnicode=true&amp;characterEncoding=utf-8
#spring.datasource.url=jdbc:mysql://192.168.1.161:3306/test?useUnicode=true&amp;characterEncoding=utf-8
spring.datasource.url=jdbc:mysql://localhost:3306/syenvironment?useUnicode=true&amp;characterEncoding=utf-8
spring.datasource.username=
spring.datasource.password=

spring.datasource.driverClassName=com.mysql.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true
#JPA Configuration:
spring.jpa.database=MYSQL
# Show or not log for each sql query
spring.jpa.show-sql=false
spring.jpa.generate-ddl=true  

spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy  

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.hbm2ddl.auto=update

#################### tableinfo-Client End ####################
#fairsense
fairsense.username=scbs01
fairsense.password=12345678
fairsense.loginurl=http://openapi.fairsense.cn/api/v2/project/user/login
fairsense.getstationinfourl=http://openapi.fairsense.cn/api/v2/stations
fairsense.getrealtimedataurl=http://openapi.fairsense.cn/api/v2/stations/adjust_datas/latest
fairsense.gethistorydataurl=http://openapi.fairsense.cn/api/v2/stations/adjust_datas/history
#fairsense
#CityAir
cityair.serviceurl=http://zx.bjmemc.com.cn/getAqiList.shtml?timestamp=1526448442458
#CityAir
weather1dUrl=http://www.weather.com.cn/weather1d/
weather7dUrl=http://www.weather.com.cn/weather/
weather15dUrl=http://www.weather.com.cn/weather15d/
airPaimingUrl=http://www.86pm25.com/paiming.htm
beiJingDistrict=http://flash.weather.com.cn/wmaps/xml/beijing.xml
beiJingPM25Url=http://www.86pm25.com/city/beijing.html
gwtWaterInfoUrl=http://123.127.175.45:8082/ajax/GwtWaterHandler.ashx
smsurl=http://106.ihuyi.cn/webservice/sms.php?method=Submit
smsapiid=C13931336
smspassword=b7c55ddb07388921052bb979300dd47e
userdefaultpassword=987321
voiceSmsurl=http://api.voice.ihuyi.com/webservice/voice.php?method=Submit
voiceSmsapiid=V65894251
voiceSmspassword=54a40d04a8a28316ab0b7a2f29a66845
#Avenue
shunYiAvenueUrl=http://forecast.weather.com.cn/town/weather1dn/101010400001.shtml#around1
avenueWeather1dnUrl=http://forecast.weather.com.cn/town/weather1dn/
avenueWeather7dUrl=http://forecast.weather.com.cn/town/weathern/
avenueWeather15dUrl=http://forecast.weather.com.cn/town/weather15dn/
gdApiUrl=https://restapi.amap.com/v3/geocode/regeo
gdApiKey=2ec11d83d136eb58b875046a5c6f2148

#数据保存到客户
optionFeedbackSave=http://117.121.97.120:9001/bjsy-dc/lingtu/optionFeedback/save
optionFeedbackReplySave=http://117.121.97.120:9001/bjsy-dc/lingtu/optionFeedbackReply/save

#redis 缓存
# Redis服务器地址
#spring.redis.host=127.0.0.1
spring.redis.host=192.168.1.117
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# Redis数据库索引
#spring.redis.database=1
spring.redis.database=6
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=500
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0

spring.cache.type=redis
